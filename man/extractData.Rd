% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/06_data_handling.R
\name{extractData}
\alias{extractData}
\title{Extract Data}
\usage{
extractData(GADSdat, convertMiss = TRUE, convertLabels = "character",
  dropPartialLabels = TRUE, convertVariables)
}
\arguments{
\item{GADSdat}{A \code{GADSdat} object.}

\item{convertMiss}{Should values coded as missings be recoded to \code{NA}?}

\item{convertLabels}{If \code{"numeric"}, values remain as numerics. If \code{"factor"} or \code{"character"}, values are recoded to their labels. Corresponding variable type is applied.}

\item{dropPartialLabels}{Should value labels for partially labelled variables be dropped? Most of the time, \code{TRUE} will be the desired behaviour.}

\item{convertVariables}{Character vector of variables names, which labels should be applied to. If not specified (default), value labels are applied to all variables for which labels are available. Variable names not in the actual GADS are silently dropped.}
}
\value{
Returns a data frame.
}
\description{
Extract \code{data.frame} from a \code{GADSdat} object for analyses in \code{R}. For extracting meta data see \code{\link{extractMeta}}.
}
\details{
A \code{GADSdat} object includes actual data (\code{GADSdat$dat}) and the corresponding meta data information (\code{GADSdat$labels}). \code{extractData} extracts the data and applies relevant meta data (missing conversion, value labels), so the data can be used for analyses in \code{R}. Careful: If factors are extracted, the underlying integers will not be equal to the original underlying integers and \code{as.numeric} will probably yield undesired results.
}
\examples{
\dontrun{
gads10 <- getGADS(vSelect = c("idstud", "wgt", "jkzone", "jkrep", "imp", "domain", "score"),
                 filePath = "t:/_R_Tutorials/R_Workshops/04_eatPakete/minigads_2010.db")

# Extract Data for Analysis
dat <- extractData(gads10)

# convert labeled variables to factors
dat <- extractData(gads10, convertLabels = "factor")

# convert only some variables to factor
dat <- extractData(gads10, convertLabels = "factor", convertVariables = c("domain"))
}

}
