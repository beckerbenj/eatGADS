% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extractData2.R
\name{extractData2}
\alias{extractData2}
\title{Extract Data}
\usage{
extractData2(
  GADSdat,
  convertMiss = TRUE,
  labels2character = namesGADS(GADSdat),
  labels2factor = NULL,
  dropPartialLabels = TRUE
)
}
\arguments{
\item{GADSdat}{A \code{GADSdat} object.}

\item{convertMiss}{Should values tagged as missing values be recoded to \code{NA}?}

\item{labels2character}{For which variables should values be recoded to their labels? The resulting variables
are of type \code{character}.}

\item{labels2factor}{For which variables should values be recoded to their labels? The resulting variables
are of type \code{factor}.}

\item{dropPartialLabels}{Should value labels for partially labeled variables be dropped?
If \code{TRUE}, the partial labels will be dropped. If \code{FALSE}, the variable will be converted
to the class specified in \code{convertLabels}.}
}
\value{
Returns a data frame.
}
\description{
Extract \code{data.frame} from a \code{GADSdat} object for analyses in \code{R}. Value labels can be
 selectively applied via defining \code{convertLabels} and \code{covertVariables}.
 For extracting meta data see \code{\link{extractMeta}}.
}
\details{
A \code{GADSdat} object includes actual data (\code{GADSdat$dat}) and the corresponding meta data information
(\code{GADSdat$labels}). \code{extractData} extracts the data and applies relevant meta data on value level (missing conversion, value labels),
so the data can be used for analyses in \code{R}. Variable labels are retained as \code{label} attributes on column level.

If \code{factor} are extracted via \code{convertLabels == "factor"}, an attempt is made to preserve the underlying integers.
If this is not possible, a warning is issued.
As \code{SPSS} has almost no limitations regarding the underlying values of labeled
integers and \code{R}'s \code{factor} format is very strict (no \code{0}, only integers increasing by \code{+ 1}),
this procedure can lead to frequent problems.
}
\examples{
# Extract Data for Analysis
dat <- extractData(pisa)

# convert labeled variables to factors
dat <- extractData(pisa, convertLabels = "factor")

# convert only some variables to factor, all others remain numeric
dat <- extractData(pisa, convertLabels = "factor", convertVariables = c("schtype", "ganztag"))

# convert only some variables to character, all others remain numeric
dat <- extractData(pisa, convertLabels = "factor", convertVariables = c("schtype", "ganztag"))
# schtype is now character
table(dat$schtype)
# schtype remains numeric
table(dat$gender)

}
